{"version":3,"sources":["webpack:///0.js","webpack:///./src/angular/index.js","webpack:///./node_modules/@angular/common/@angular/common/http.es5.js","webpack:///./node_modules/zone.js/dist/zone.js","webpack:///./node_modules/single-spa-angular2/lib/single-spa-angular2.js","webpack:///./src/angular/main-module.ts","webpack:///./src/angular/angular.component.ts"],"names":["webpackJsonp","258","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","unmount","props","Promise","resolve","then","document","getElementById","remove","Object","defineProperty","value","mount","bootstrap","undefined","_singleSpaAngular2","_singleSpaAngular","_mainModule2","_mainModule","domElementGetter","el","createElement","id","body","appendChild","ngLifecycles","mainModule","angularPlatform","platformBrowserDynamic","template","Router","NgZone","260","__webpack_exports__","paramParser","rawParams","codec","map$$1","Map","length","split","forEach","param","eqIdx","indexOf","_a","decodeKey","slice","decodeValue","key","val","list","get","push","set","standardEncoding","v","encodeURIComponent","replace","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","addBody","options","headers","observe","params","reportProgress","responseType","withCredentials","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","interceptingHandler","backend","interceptors","reduceRight","next","interceptor","HttpInterceptorHandler","jsonpCallbackContext","window","HttpHandler","prototype","handle","req","HttpBackend","HttpUrlEncodingCodec","encodeKey","k","encodeValue","decodeURIComponent","HttpParams","this","updates","cloneFrom","encoder","map","fromString","has","init","res","getAll","keys","Array","from","append","clone","op","delete","toString","_this","eKey","join","update","concat","base","base_1","idx","splice","HttpHeaders","normalizedNames","lazyUpdate","lazyInit","line","index","name","toLowerCase","trim","maybeSetNormalizedName","values","lcName","copyFrom","applyUpdate","other","apply","toDelete_1","existing","filter","fn","HttpRequest","url","third","fourth","toUpperCase","urlWithParams","qIdx","sep","serializeBody","isArray","JSON","stringify","detectContentTypeHeader","type","setHeaders","reduce","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","_super","call","HttpResponse","HttpErrorResponse","message","error","HttpClient","handler","request","first","events$","res$","event","Error","head","jsonp","callbackParam","patch","post","put","decorators","ctorParameters","intercept","HTTP_INTERCEPTORS","NoopInterceptor","nextRequestId","JsonpCallbackContext","JsonpClientBackend","callbackMap","nextCallback","observer","callback","node","src","finished","cancelled","data","cleanup","parentNode","removeChild","onLoad","complete","onError","addEventListener","removeEventListener","args","JsonpInterceptor","XSSI_PREFIX","XhrFactory","build","BrowserXhr","XMLHttpRequest","HttpXhrBackend","xhrFactory","open","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","response","responseText","parse","text","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","getToken","HttpXsrfCookieExtractor","doc","platform","cookieName","lastCookieString","lastToken","parseCount","cookieString","cookie","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","token","HttpClientXsrfModule","disable","ngModule","providers","provide","useClass","withOptions","useValue","useExisting","multi","HttpClientModule","imports","useFactory","deps","HttpClientJsonpModule","261","global","factory","wrapWithCurrentZone","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","customSchedule","customCancel","scheduleMacroTask","bindArguments","i","patchPrototype","fnNames","constructor","name_1","delegate","isPropertyWritable","ObjectGetOwnPropertyDescriptor","patched","arguments","attachOriginToPatched","propertyDesc","writable","patchProperty","prop","desc","enumerable","configurable","onPropPatchedSymbol","zoneSymbol","hasOwnProperty","originalDescGet","originalDescSet","eventName","substr","eventNameSymbol","zoneSymbolEventNames","newValue","target","_global","wrapFn","NULL_ON_PROP_VALUE","listener","REMOVE_ATTRIBUTE","removeAttribute","ObjectDefineProperty","patchOnProperties","properties","onProperties","j","patchClass","className","OriginalClass","a","originalInstanceKey","instance","copySymbolProperties","dest","getOwnPropertySymbols","symbol","getOwnPropertyDescriptor","patchMethod","patchFn","proto","ObjectGetPrototypeOf","delegateName","patchDelegate_1","shouldCopySymbolProperties","patchMacroTask","funcName","metaCreator","scheduleTask","task","cbIdx","invoke","setNative","self","meta","original","isIE","ua","internalWindow","navigator","userAgent","isIEOrEdge","isDetectedIEOrEdge","ieOrEdge","patchEventTarget","apis","patchOptions","ADD_EVENT_LISTENER","add","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER","rm","REMOVE_EVENT_LISTENER_STR","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","isRemoved","handleEvent","originalDelegate","once","delegate_1","globalZoneAwareCallback","tasks","zoneSymbolEventNames$1","FALSE_STR","copyTasks","IMMEDIATE_PROPAGATION_SYMBOL","globalZoneAwareCaptureCallback","TRUE_STR","results","checkIsPassive","passiveSupported","taskData","capture","useGlobalCallback","useG","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","nativePrependEventListener","eventNameToString","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","prepend","customScheduleGlobal","isExisting","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","blackListedEvents","__symbol__","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","isNode","isHandleEvent","zone","falseEventName","trueEventName","ZONE_SYMBOL_PREFIX","symbolCapture","constructorName","targetSource","globalSources","OPTIMIZED_ZONE_EVENT_TASK_DATA","scheduleEventTask","unshift","cancelTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","match","EVENT_NAME_SYMBOL_REGX","exec","evtName","foundTasks","patchEventPrototype","api","Event","patchTimer","setName","cancelName","nameSuffix","timer","isPeriodic","handleId","tasksByHandleId","taskSymbol","clearTask","clearNative","delay","ref","unref","bind","state","cancelFn","runCount","propertyPatch","isUnconfigurable","TypeError","originalConfigurableFlag","rewriteDescriptor","_tryDefineProperty","defineProperties","create","isFrozen","_create","_getOwnPropertyDescriptor","_redefineProperty","unconfigurablesKey","_defineProperty","descJson","console","log","WS","WebSocket","EventTarget","x","y","proxySocket","proxySocketProto","socket","onmessageDesc","ObjectCreate","propName","ArraySlice","propertySymbol","globalWebSocket","filterProperties","ignoreProperties","tip","ip","targetIgnoreProperties","patchFilteredProperties","propertyDescriptorPatch","isMix","supportsWebSocket","canPatchViaPropertyDescriptor","isBrowser","ignoreErrorProperties","eventNames","Document","Element","HTMLElement","HTMLMediaElement","mediaElementEventNames","HTMLFrameSetElement","windowEventNames","frameSetEventNames","HTMLBodyElement","HTMLFrameElement","frameEventNames","HTMLIFrameElement","HTMLMarqueeElement_1","marqueeEventNames","Worker_1","workerEventNames","XMLHttpRequestEventNames","XMLHttpRequestEventTarget_1","IDBIndex","IDBIndexEventNames","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","websocketEventNames","patchViaCapturingAllTheEvents","XMLHttpRequestPrototype","xhrDesc","result","onreadystatechange","SYMBOL_FAKE_ONREADYSTATECHANGE_1","detectFunc","property","onproperty","bound","elt","unboundKey","parentElement","eventTargetPatch","WTF_ISSUE_555","NO_EVENT_TARGET","isWtf","WTF_ISSUE_555_ARRAY","isDisableIECheck","isEnableCrossContextCheck","BROWSER_TOOLS","targets","checkIEAndCrossContext","nativeDelegate","testString","apiTypes","patchEvent","patchCallbacks","targetName","callbacks","opts","descriptor","registerElementPatch","patchCustomElements","customElements","__values","mark","performance","performanceMeasure","label","scheduleMicroTask","_numberOfNestedTaskFrames","_microTaskQueue","nativeMicroTaskQueuePromise","symbolPromise","nativeThen","symbolThen","drainMicroTaskQueue","symbolSetTimeout","_isDrainingMicrotaskQueue","queue","runTask","_api","onUnhandledError","microtaskDrainDone","noop","parent","zoneSpec","_parent","_name","_properties","_zoneDelegate","ZoneDelegate","assertZonePatched","patches","_currentZoneFrame","_currentTask","__load_patch","perfName","getZoneWith","fork","_callback","runGuarded","run","applyThis","applyArgs","handleError","NO_ZONE","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","ZoneTask","microTask","canceling","count","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","change","_state","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","currentZoneFrame","showUncaughtError","patchThen","setNativePromise","NativePromise","o","m","Symbol","iterator","done","readableObjectToString","handleUnhandledRejection","e","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","isThenable","forwardResolution","forwardRejection","rejection","ZoneAwarePromise","reject","makeResolver","promise","resolvePromise","onceWrapper","TYPE_ERROR","symbolState","UNRESOLVED","REJECTED","symbolValue","clearRejectedNoCatch","symbolFinally","RESOLVED","symbolParentPromiseState","symbolParentPromiseValue","trace","currentTask","creationTrace","CURRENT_TASK_TRACE_SYMBOL","scheduleResolveOrReject","REJECTED_NO_CATCH","stack","error_1","_uncaughtPromiseErrors","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","Ctor","originalThen","onResolve","onReject","symbolThenPatched","uncaughtPromiseError","shift","wasCalled","wrappedFunction","executor","race","e_1","rej","values_1","values_1_1","e_1_1","return","all","e_2","unresolvedCount","valueIndex","resolvedValues","this_1","values_2","values_2_1","curValueIndex","e_2_1","catch","finally","onFinally","ZONE_AWARE_PROMISE","NewNativePromise","fetch","fetchTaskScheduling","fetchTaskAborting","OriginalAbortController","supportAbort","abortNative","abortController","signal","placeholder","fetchPromise","ctor","resource","aborted","getPrototypeOf","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","isWindowExists","isWebWorker","WorkerGlobalScope","process","errorEvent","filename","lineno","colno","preventDefault","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","globalEventHandlersEventNames","documentEventNames","htmlElementEventNames","ieElementEventNames","webglEventNames","formEventNames","detailEventNames","blockingMethods","s","SYMBOL_BLACK_LISTED_EVENTS","XMLHttpRequestEventTarget","HTMLCanvasElement","toBlob","findPendingTask","XHR_TASK","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","oriAddListener","oriRemoveListener","READY_STATE_CHANGE","newListener","readyState","DONE","SCHEDULED","loadTasks","oriInvoke_1","sendNative","placeholderCallback","XMLHttpRequestEventTargetPrototype","openNative","XHR_SYNC","XHR_URL","geolocation","findPromiseRejectionHandler","PromiseRejectionEvent","evt","reason","262","singleSpaAngular2","userOpts","_typeof","_extends","defaultOpts","chooseDomElementGetter","appName","getContainerEl","innerHTML","bootstrapModule","bootstrappedModule","injector","dispose","destroy","element","customProps","assign","263","__decorate","d","c","r","Reflect","decorate","enableProdMode","MainModule","NgModule","BrowserModule","CommonModule","APP_BASE_HREF","declarations","264","__param","paramIndex","decorator","changeDetector","http","listData","isLoading","getData","subscribe","results1","results2","setTimeout","AngularApp","Component","selector","templateUrl","Inject","ChangeDetectorRef"],"mappings":"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f,OAAO8e,OACjBK,GAAqB3L,EAAW,mBA6JhCkgB,IACA,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAEAC,IACA,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UAEpBlS,IACA,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,oBACA,wBACA,0BAEAmS,IACA,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAEpDrS,IAA0B,YAAa,gBAAiB,YAAa,oBAAqB,mBAC1FsS,IACA,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBAC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","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 258:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mount = exports.bootstrap = undefined;\nexports.unmount = unmount;\n\n__webpack_require__(261);\n\n__webpack_require__(113);\n\nvar _singleSpaAngular = __webpack_require__(262);\n\nvar _singleSpaAngular2 = _interopRequireDefault(_singleSpaAngular);\n\nvar _platformBrowserDynamic = __webpack_require__(114);\n\nvar _mainModule = __webpack_require__(263);\n\nvar _mainModule2 = _interopRequireDefault(_mainModule);\n\nvar _router = __webpack_require__(119);\n\nvar _core = __webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar domElementGetter = function domElementGetter() {\n  var el = document.getElementById('angular');\n  if (!el) {\n    el = document.createElement('div');\n    el.id = 'angular';\n    document.body.appendChild(el);\n  }\n\n  return el;\n};\n\nvar ngLifecycles = (0, _singleSpaAngular2.default)({\n  domElementGetter: domElementGetter,\n  mainModule: _mainModule2.default,\n  angularPlatform: (0, _platformBrowserDynamic.platformBrowserDynamic)(),\n  template: '<AngularApp />',\n  Router: _router.Router,\n  NgZone: _core.NgZone\n});\n\nvar bootstrap = exports.bootstrap = function bootstrap(props) {\n  return ngLifecycles.bootstrap(props);\n};\n\nvar mount = exports.mount = function mount(props) {\n  return ngLifecycles.mount(props);\n};\n\nfunction unmount(props) {\n  return Promise.resolve().then(function () {\n    var el = document.getElementById(\"angular\");\n    el.remove();\n  });\n}\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpBackend\", function() { return HttpBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHandler\", function() { return HttpHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClient\", function() { return HttpClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaders\", function() { return HttpHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HTTP_INTERCEPTORS\", function() { return HTTP_INTERCEPTORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonpClientBackend\", function() { return JsonpClientBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonpInterceptor\", function() { return JsonpInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientJsonpModule\", function() { return HttpClientJsonpModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientModule\", function() { return HttpClientModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClientXsrfModule\", function() { return HttpClientXsrfModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵinterceptingHandler\", function() { return interceptingHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpParams\", function() { return HttpParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpUrlEncodingCodec\", function() { return HttpUrlEncodingCodec; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpRequest\", function() { return HttpRequest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpErrorResponse\", function() { return HttpErrorResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpEventType\", function() { return HttpEventType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpHeaderResponse\", function() { return HttpHeaderResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponse\", function() { return HttpResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponseBase\", function() { return HttpResponseBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpXhrBackend\", function() { return HttpXhrBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XhrFactory\", function() { return XhrFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpXsrfTokenExtractor\", function() { return HttpXsrfTokenExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return NoopInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return JsonpCallbackContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return jsonpCallbackContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return BrowserXhr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return HttpXsrfCookieExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return HttpXsrfInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return XSRF_COOKIE_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return XSRF_HEADER_NAME; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__ = __webpack_require__(115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__ = __webpack_require__(116);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);\n\n/**\n * @license Angular v4.4.7\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_concatMap__[\"concatMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_of__[\"of\"])(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_filter__[\"filter\"].call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return __WEBPACK_IMPORTED_MODULE_5_rxjs_operator_map__[\"map\"].call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"DOCUMENT\"],] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && req.responseType === 'json' && typeof body === 'string') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                else if (!ok && req.responseType === 'json' && typeof body === 'string') {\n                    try {\n                        // Attempt to parse the body as JSON.\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Cannot be certain that the body was meant to be parsed as JSON.\n                        // Leave the body as a string.\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"InjectionToken\"]('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = Object(__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"ɵparseCookieValue\"])(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"DOCUMENT\"],] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"PLATFORM_ID\"],] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"], args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Inject\"](HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=http.es5.js.map\n\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\t true ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Zone$1 = (function (global) {\n    var performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    var checkDuplicate = global[('__zone_symbol__forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    var Zone = /** @class */ (function () {\n        function Zone(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"root\", {\n            get: function () {\n                var zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.__load_patch = function (name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                if (checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                var perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        };\n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            var reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleTask = function (task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                var newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(\"can not reschedule task to \" + this.name + \" which is descendants of the original zone \" + task.zone.name);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            var zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        };\n        Zone.prototype._updateTaskCount = function (task, count) {\n            var zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (var i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        };\n        Zone.__symbol__ = __symbol__;\n        return Zone;\n    }());\n    var DELEGATE_ZS = {\n        name: '',\n        onHasTask: function (delegate, _, target, hasTaskState) { return delegate.hasTask(target, hasTaskState); },\n        onScheduleTask: function (delegate, _, target, task) {\n            return delegate.scheduleTask(target, task);\n        },\n        onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) {\n            return delegate.invokeTask(target, task, applyThis, applyArgs);\n        },\n        onCancelTask: function (delegate, _, target, task) { return delegate.cancelTask(target, task); }\n    };\n    var ZoneDelegate = /** @class */ (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            var returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = /** @class */ (function () {\n        function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        ZoneTask.invokeTask = function (task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        };\n        Object.defineProperty(ZoneTask.prototype, \"zone\", {\n            get: function () {\n                return this._zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ZoneTask.prototype, \"state\", {\n            get: function () {\n                return this._state;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ZoneTask.prototype.cancelScheduleRequest = function () {\n            this._transitionTo(notScheduled, scheduling);\n        };\n        ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(this.type + \" '\" + this.source + \"': can not transition to '\" + toState + \"', expecting state '\" + fromState1 + \"'\" + (fromState2 ? ' or \\'' + fromState2 + '\\'' : '') + \", was '\" + this._state + \"'.\");\n            }\n        };\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        };\n        return ZoneTask;\n    }());\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                var nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var NO_ZONE = { name: 'NO ZONE' };\n    var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    var patches = {};\n    var _api = {\n        symbol: __symbol__,\n        currentZoneFrame: function () { return _currentZoneFrame; },\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: function () { return !Zone[__symbol__('ignoreConsoleErrorUncaughtError')]; },\n        patchEventTarget: function () { return []; },\n        patchOnProperties: noop,\n        patchMethod: function () { return noop; },\n        bindArguments: function () { return []; },\n        patchThen: function () { return noop; },\n        setNativePromise: function (NativePromise) {\n            // sometimes NativePromise.resolve static function\n            // is not ready yet, (such as core-js/es6.promise)\n            // so we need to check here.\n            if (NativePromise && typeof NativePromise.resolve === 'function') {\n                nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n            }\n        },\n    };\n    var _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    var _currentTask = null;\n    var _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nZone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {\n    var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            var className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    var __symbol__ = api.symbol;\n    var _uncaughtPromiseErrors = [];\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var creationTrace = '__creationTrace__';\n    api.onUnhandledError = function (e) {\n        if (api.showUncaughtError()) {\n            var rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = function () {\n        while (_uncaughtPromiseErrors.length) {\n            var _loop_1 = function () {\n                var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(function () {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            };\n            while (_uncaughtPromiseErrors.length) {\n                _loop_1();\n            }\n        }\n    };\n    var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (handler && typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var symbolFinally = __symbol__('finally');\n    var symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    var symbolParentPromiseState = __symbol__('parentPromiseState');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    var once = function () {\n        var wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    var TYPE_ERROR = 'Promise resolved with itself';\n    var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        var onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            var then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(function () {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(function () {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    var trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        // try to print more readable error log\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        var error_1 = err;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                var handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var promiseState = promise[symbolState];\n        var delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                var parentPromiseValue = promise[symbolValue];\n                var isFinallyPromise = chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                var value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    var ZoneAwarePromise = /** @class */ (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var e_1, _a;\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            try {\n                for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n                    var value = values_1_1.value;\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var e_2, _a;\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            var unresolvedCount = 2;\n            var valueIndex = 0;\n            var resolvedValues = [];\n            var _loop_2 = function (value) {\n                if (!isThenable(value)) {\n                    value = this_1.resolve(value);\n                }\n                var curValueIndex = valueIndex;\n                value.then(function (value) {\n                    resolvedValues[curValueIndex] = value;\n                    unresolvedCount--;\n                    if (unresolvedCount === 0) {\n                        resolve(resolvedValues);\n                    }\n                }, reject);\n                unresolvedCount++;\n                valueIndex++;\n            };\n            var this_1 = this;\n            try {\n                for (var values_2 = __values(values), values_2_1 = values_2.next(); !values_2_1.done; values_2_1 = values_2.next()) {\n                    var value = values_2_1.value;\n                    _loop_2(value);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (values_2_1 && !values_2_1.done && (_a = values_2.return)) _a.call(values_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        ZoneAwarePromise.prototype.finally = function (onFinally) {\n            var chainPromise = new this.constructor(null);\n            chainPromise[symbolFinally] = symbolFinally;\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[symbolPromise] = global['Promise'];\n    var ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n    var desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n    if (!desc || desc.configurable) {\n        desc && delete desc.writable;\n        desc && delete desc.value;\n        if (!desc) {\n            desc = { configurable: true, enumerable: true };\n        }\n        desc.get = function () {\n            // if we already set ZoneAwarePromise, use patched one\n            // otherwise return native one.\n            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n        };\n        desc.set = function (NewNativePromise) {\n            if (NewNativePromise === ZoneAwarePromise) {\n                // if the NewNativePromise is ZoneAwarePromise\n                // save to global\n                global[ZONE_AWARE_PROMISE] = NewNativePromise;\n            }\n            else {\n                // if the NewNativePromise is not ZoneAwarePromise\n                // for example: after load zone.js, some library just\n                // set es6-promise to global, if we set it to global\n                // directly, assertZonePatched will fail and angular\n                // will not loaded, so we just set the NewNativePromise\n                // to global[symbolPromise], so the result is just like\n                // we load ES6 Promise before zone.js\n                global[symbolPromise] = NewNativePromise;\n                if (!NewNativePromise.prototype[symbolThen]) {\n                    patchThen(NewNativePromise);\n                }\n                api.setNativePromise(NewNativePromise);\n            }\n        };\n        ObjectDefineProperty(global, 'Promise', desc);\n    }\n    global['Promise'] = ZoneAwarePromise;\n    var symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        var proto = Ctor.prototype;\n        var prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        var originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            var _this = this;\n            var wrapped = new ZoneAwarePromise(function (resolve, reject) {\n                originalThen.call(_this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    if (NativePromise) {\n        patchThen(NativePromise);\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('fetch', function (global, Zone, api) {\n    var fetch = global['fetch'];\n    var ZoneAwarePromise = global.Promise;\n    var symbolThenPatched = api.symbol('thenPatched');\n    var fetchTaskScheduling = api.symbol('fetchTaskScheduling');\n    var fetchTaskAborting = api.symbol('fetchTaskAborting');\n    if (typeof fetch !== 'function') {\n        return;\n    }\n    var OriginalAbortController = global['AbortController'];\n    var supportAbort = typeof OriginalAbortController === 'function';\n    var abortNative = null;\n    if (supportAbort) {\n        global['AbortController'] = function () {\n            var abortController = new OriginalAbortController();\n            var signal = abortController.signal;\n            signal.abortController = abortController;\n            return abortController;\n        };\n        abortNative = api.patchMethod(OriginalAbortController.prototype, 'abort', function (delegate) { return function (self, args) {\n            if (self.task) {\n                return self.task.zone.cancelTask(self.task);\n            }\n            return delegate.apply(self, args);\n        }; });\n    }\n    var placeholder = function () { };\n    global['fetch'] = function () {\n        var _this = this;\n        var args = Array.prototype.slice.call(arguments);\n        var options = args.length > 1 ? args[1] : null;\n        var signal = options && options.signal;\n        return new Promise(function (res, rej) {\n            var task = Zone.current.scheduleMacroTask('fetch', placeholder, args, function () {\n                var fetchPromise;\n                var zone = Zone.current;\n                try {\n                    zone[fetchTaskScheduling] = true;\n                    fetchPromise = fetch.apply(_this, args);\n                }\n                catch (error) {\n                    rej(error);\n                    return;\n                }\n                finally {\n                    zone[fetchTaskScheduling] = false;\n                }\n                if (!(fetchPromise instanceof ZoneAwarePromise)) {\n                    var ctor = fetchPromise.constructor;\n                    if (!ctor[symbolThenPatched]) {\n                        api.patchThen(ctor);\n                    }\n                }\n                fetchPromise.then(function (resource) {\n                    if (task.state !== 'notScheduled') {\n                        task.invoke();\n                    }\n                    res(resource);\n                }, function (error) {\n                    if (task.state !== 'notScheduled') {\n                        task.invoke();\n                    }\n                    rej(error);\n                });\n            }, function () {\n                if (!supportAbort) {\n                    rej('No AbortController supported, can not cancel fetch');\n                    return;\n                }\n                if (signal && signal.abortController && !signal.aborted &&\n                    typeof signal.abortController.abort === 'function' && abortNative) {\n                    try {\n                        Zone.current[fetchTaskAborting] = true;\n                        abortNative.call(signal.abortController);\n                    }\n                    finally {\n                        Zone.current[fetchTaskAborting] = false;\n                    }\n                }\n                else {\n                    rej('cancel fetch need a AbortController.signal');\n                }\n            });\n            if (signal && signal.abortController) {\n                signal.abortController.task = task;\n            }\n        });\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nvar ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nvar ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nvar ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nvar ObjectCreate = Object.create;\n/** Array.prototype.slice */\nvar ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nvar ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nvar REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nvar ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nvar ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nvar TRUE_STR = 'true';\n/** false string const */\nvar FALSE_STR = 'false';\n/** __zone_symbol__ string const */\nvar ZONE_SYMBOL_PREFIX = '__zone_symbol__';\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nvar zoneSymbol = Zone.__symbol__;\nvar isWindowExists = typeof window !== 'undefined';\nvar internalWindow = isWindowExists ? window : undefined;\nvar _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nvar REMOVE_ATTRIBUTE = 'removeAttribute';\nvar NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    var source = prototype.constructor['name'];\n    var _loop_1 = function (i) {\n        var name_1 = fnNames[i];\n        var delegate = prototype[name_1];\n        if (delegate) {\n            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name_1);\n            if (!isPropertyWritable(prototypeDesc)) {\n                return \"continue\";\n            }\n            prototype[name_1] = (function (delegate) {\n                var patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    };\n    for (var i = 0; i < fnNames.length; i++) {\n        _loop_1(i);\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nvar isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nvar zoneSymbolEventNames = {};\nvar wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    var eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    var target = this || event.target || _global;\n    var listener = target[eventNameSymbol];\n    var result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        var errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    var desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    var onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    var originalDescGet = desc.get;\n    var originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    var eventName = prop.substr(2);\n    var eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        var previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        var listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            var value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        var onProperties = [];\n        for (var prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (var j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    var OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        var a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    var instance = new OriginalClass(function () { });\n    var prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n        return;\n    }\n    var symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach(function (symbol) {\n        var desc = Object.getOwnPropertyDescriptor(src, symbol);\n        Object.defineProperty(dest, symbol, {\n            get: function () {\n                return src[symbol];\n            },\n            set: function (value) {\n                if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                    // if src[symbol] is not writable or not have a setter, just return\n                    return;\n                }\n                src[symbol] = value;\n            },\n            enumerable: desc ? desc.enumerable : true,\n            configurable: desc ? desc.configurable : true\n        });\n    });\n}\nvar shouldCopySymbolProperties = false;\n\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate = null;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            var patchDelegate_1 = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate_1(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n            if (shouldCopySymbolProperties) {\n                copySymbolProperties(delegate, proto[name]);\n            }\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    var setNative = null;\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n        var meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    }; });\n}\n\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nvar isDetectedIEOrEdge = false;\nvar ieOrEdge = false;\nfunction isIE() {\n    try {\n        var ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        var ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n        return ieOrEdge;\n    }\n    catch (error) {\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', function (global) {\n    // patch Func.prototype.toString to let them look like native\n    var originalFunctionToString = Function.prototype.toString;\n    var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    var PROMISE_SYMBOL = zoneSymbol('Promise');\n    var ERROR_SYMBOL = zoneSymbol('Error');\n    var newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.apply(this[ORIGINAL_DELEGATE_SYMBOL], arguments);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                var nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.apply(nativePromise, arguments);\n                }\n            }\n            if (this === Error) {\n                var nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.apply(nativeError, arguments);\n                }\n            }\n        }\n        return originalFunctionToString.apply(this, arguments);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    var originalObjectToString = Object.prototype.toString;\n    var PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.apply(this, arguments);\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nvar passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nvar OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nvar zoneSymbolEventNames$1 = {};\nvar globalSources = {};\nvar EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\\w+)(true|false)$/;\nvar IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');\nfunction patchEventTarget(_global, apis, patchOptions) {\n    var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    var PREPEND_EVENT_LISTENER = 'prependListener';\n    var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    var invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        var delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = function (event) { return delegate.handleEvent(event); };\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        var options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            var delegate_1 = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate_1, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    var globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    var globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        var useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        var validateHandler = patchOptions && patchOptions.vh;\n        var checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        var returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        var proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        var eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        var taskData = {};\n        var nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        var nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        var nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        var nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        var nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        function checkIsPassive(task) {\n            if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                // options is a non-null non-undefined object\n                // passive is not supported\n                // don't pass options as object\n                // just pass capture as a boolean\n                task.options = !!taskData.options.capture;\n                taskData.options = task.options;\n            }\n        }\n        var customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        var customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                var symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                var symbolEventName = void 0;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (var i = 0; i < existingTasks.length; i++) {\n                        var existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        var customScheduleNonGlobal = function (task) {\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        var compareTaskCallbackVsDelegate = function (task, delegate) {\n            var typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        var compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        var blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];\n        var makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget, prepend) {\n            if (returnTarget === void 0) { returnTarget = false; }\n            if (prepend === void 0) { prepend = false; }\n            return function () {\n                var target = this || _global;\n                var eventName = arguments[0];\n                var delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                var isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                var options = arguments[2];\n                if (blackListedEvents) {\n                    // check black list\n                    for (var i = 0; i < blackListedEvents.length; i++) {\n                        if (eventName === blackListedEvents[i]) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                    }\n                }\n                var capture;\n                var once = false;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                    once = options ? !!options.once : false;\n                }\n                var zone = Zone.current;\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                var symbolEventName;\n                if (!symbolEventNames) {\n                    // the code is duplicate, but I just want to get some better performance\n                    var falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                    var trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                    var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                    var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                    zoneSymbolEventNames$1[eventName] = {};\n                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                    symbolEventName = capture ? symbolCapture : symbol;\n                }\n                else {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = target[symbolEventName];\n                var isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (var i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                var source;\n                var constructorName = target.constructor['name'];\n                var targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var options = arguments[2];\n            var capture;\n            if (options === undefined) {\n                capture = false;\n            }\n            else if (options === true) {\n                capture = true;\n            }\n            else if (options === false) {\n                capture = false;\n            }\n            else {\n                capture = options ? !!options.capture : false;\n            }\n            var delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            var symbolEventNames = zoneSymbolEventNames$1[eventName];\n            var symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            var existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (var i = 0; i < existingTasks.length; i++) {\n                    var existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var listeners = [];\n            var tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (var i = 0; i < tasks.length; i++) {\n                var task = tasks[i];\n                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            if (!eventName) {\n                var keys = Object.keys(target);\n                for (var i = 0; i < keys.length; i++) {\n                    var prop = keys[i];\n                    var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    var evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    var symbolEventName = symbolEventNames[FALSE_STR];\n                    var symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    var tasks = target[symbolEventName];\n                    var captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        var removeTasks = tasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        var removeTasks = captureTasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    var results = [];\n    for (var i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    var foundTasks = [];\n    for (var prop in target) {\n        var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        var evtName = match && match[1];\n        if (evtName && (!eventName || evtName === eventName)) {\n            var tasks = target[prop];\n            if (tasks) {\n                for (var i = 0; i < tasks.length; i++) {\n                    foundTasks.push(tasks[i]);\n                }\n            }\n        }\n    }\n    return foundTasks;\n}\nfunction patchEventPrototype(global, api) {\n    var Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) { return function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        }; });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nvar taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                var task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var id = args[0];\n            var task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\nvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nvar _create = Object.create;\nvar unconfigurablesKey = zoneSymbol('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        var originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        var desc = _getOwnPropertyDescriptor(obj, prop);\n        if (desc && isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\nfunction _redefineProperty(obj, prop, desc) {\n    var originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    // issue-927, if the desc is frozen, don't try to change the desc\n    if (!Object.isFrozen(desc)) {\n        desc.configurable = true;\n    }\n    if (!desc.configurable) {\n        // issue-927, if the obj is frozen, don't try to set the desc to obj\n        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        if (obj[unconfigurablesKey]) {\n            obj[unconfigurablesKey][prop] = true;\n        }\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (error) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (error) {\n                var descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (error) {\n                    descJson = desc.toString();\n                }\n                console.log(\"Attempting to configure '\" + prop + \"' with descriptor '\" + descJson + \"' on object '\" + obj + \"' and got error, giving up: \" + error);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// we have to patch the instance since the proto is non-configurable\nfunction apply(api, _global) {\n    var WS = _global.WebSocket;\n    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n    // On older Chrome, no need since EventTarget was already patched\n    if (!_global.EventTarget) {\n        patchEventTarget(_global, [WS.prototype]);\n    }\n    _global.WebSocket = function (x, y) {\n        var socket = arguments.length > 1 ? new WS(x, y) : new WS(x);\n        var proxySocket;\n        var proxySocketProto;\n        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n        var onmessageDesc = ObjectGetOwnPropertyDescriptor(socket, 'onmessage');\n        if (onmessageDesc && onmessageDesc.configurable === false) {\n            proxySocket = ObjectCreate(socket);\n            // socket have own property descriptor 'onopen', 'onmessage', 'onclose', 'onerror'\n            // but proxySocket not, so we will keep socket as prototype and pass it to\n            // patchOnProperties method\n            proxySocketProto = socket;\n            [ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR, 'send', 'close'].forEach(function (propName) {\n                proxySocket[propName] = function () {\n                    var args = ArraySlice.call(arguments);\n                    if (propName === ADD_EVENT_LISTENER_STR || propName === REMOVE_EVENT_LISTENER_STR) {\n                        var eventName = args.length > 0 ? args[0] : undefined;\n                        if (eventName) {\n                            var propertySymbol = Zone.__symbol__('ON_PROPERTY' + eventName);\n                            socket[propertySymbol] = proxySocket[propertySymbol];\n                        }\n                    }\n                    return socket[propName].apply(socket, args);\n                };\n            });\n        }\n        else {\n            // we can patch the real socket\n            proxySocket = socket;\n        }\n        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open'], proxySocketProto);\n        return proxySocket;\n    };\n    var globalWebSocket = _global['WebSocket'];\n    for (var prop in WS) {\n        globalWebSocket[prop] = WS[prop];\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nvar globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nvar documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nvar windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplyconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nvar htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nvar mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nvar ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nvar webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nvar formEventNames = ['autocomplete', 'autocompleteerror'];\nvar detailEventNames = ['toggle'];\nvar frameEventNames = ['load'];\nvar frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nvar marqueeEventNames = ['bounce', 'finish', 'start'];\nvar XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nvar IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nvar websocketEventNames = ['close', 'error', 'open', 'message'];\nvar workerEventNames = ['error', 'message'];\nvar eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    var tip = ignoreProperties.filter(function (ip) { return ip.target === target; });\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    var targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(function (op) { return targetIgnoreProperties.indexOf(op) === -1; });\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    var filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    var supportsWebSocket = typeof WebSocket !== 'undefined';\n    if (canPatchViaPropertyDescriptor()) {\n        var ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            var internalWindow = window;\n            var ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            var HTMLMarqueeElement_1 = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement_1) {\n                patchFilteredProperties(HTMLMarqueeElement_1.prototype, marqueeEventNames, ignoreProperties);\n            }\n            var Worker_1 = internalWindow['Worker'];\n            if (Worker_1) {\n                patchFilteredProperties(Worker_1.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        var XMLHttpRequestEventTarget_1 = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget_1) {\n            patchFilteredProperties(XMLHttpRequestEventTarget_1 && XMLHttpRequestEventTarget_1.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n    else {\n        // Safari, Android browsers (Jelly Bean)\n        patchViaCapturingAllTheEvents();\n        patchClass('XMLHttpRequest');\n        if (supportsWebSocket) {\n            apply(api, _global);\n        }\n    }\n}\nfunction canPatchViaPropertyDescriptor() {\n    if ((isBrowser || isMix) && !ObjectGetOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n        typeof Element !== 'undefined') {\n        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n        // IDL interface attributes are not configurable\n        var desc = ObjectGetOwnPropertyDescriptor(Element.prototype, 'onclick');\n        if (desc && !desc.configurable)\n            return false;\n    }\n    var ON_READY_STATE_CHANGE = 'onreadystatechange';\n    var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n    var xhrDesc = ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE);\n    // add enumerable and configurable here because in opera\n    // by default XMLHttpRequest.prototype.onreadystatechange is undefined\n    // without adding enumerable and configurable will cause onreadystatechange\n    // non-configurable\n    // and if XMLHttpRequest.prototype.onreadystatechange is undefined,\n    // we should set a real desc instead a fake one\n    if (xhrDesc) {\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return true;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var result = !!req.onreadystatechange;\n        // restore original desc\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, xhrDesc || {});\n        return result;\n    }\n    else {\n        var SYMBOL_FAKE_ONREADYSTATECHANGE_1 = zoneSymbol('fake');\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1];\n            },\n            set: function (value) {\n                this[SYMBOL_FAKE_ONREADYSTATECHANGE_1] = value;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var detectFunc = function () { };\n        req.onreadystatechange = detectFunc;\n        var result = req[SYMBOL_FAKE_ONREADYSTATECHANGE_1] === detectFunc;\n        req.onreadystatechange = null;\n        return result;\n    }\n}\nvar unboundKey = zoneSymbol('unbound');\n// Whenever any eventListener fires, we check the eventListener target and all parents\n// for `onwhatever` properties and replace them with zone-bound functions\n// - Chrome (for now)\nfunction patchViaCapturingAllTheEvents() {\n    var _loop_1 = function (i) {\n        var property = eventNames[i];\n        var onproperty = 'on' + property;\n        self.addEventListener(property, function (event) {\n            var elt = event.target, bound, source;\n            if (elt) {\n                source = elt.constructor['name'] + '.' + onproperty;\n            }\n            else {\n                source = 'unknown.' + onproperty;\n            }\n            while (elt) {\n                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n                    bound = wrapWithCurrentZone(elt[onproperty], source);\n                    bound[unboundKey] = elt[onproperty];\n                    elt[onproperty] = bound;\n                }\n                elt = elt.parentElement;\n            }\n        }, true);\n    };\n    for (var i = 0; i < eventNames.length; i++) {\n        _loop_1(i);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\n    var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'\n        .split(',');\n    var EVENT_TARGET = 'EventTarget';\n    var apis = [];\n    var isWtf = _global['wtf'];\n    var WTF_ISSUE_555_ARRAY = WTF_ISSUE_555.split(',');\n    if (isWtf) {\n        // Workaround for: https://github.com/google/tracing-framework/issues/555\n        apis = WTF_ISSUE_555_ARRAY.map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\n    }\n    else if (_global[EVENT_TARGET]) {\n        apis.push(EVENT_TARGET);\n    }\n    else {\n        // Note: EventTarget is not available in all browsers,\n        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n        apis = NO_EVENT_TARGET;\n    }\n    var isDisableIECheck = _global['__Zone_disable_IE_check'] || false;\n    var isEnableCrossContextCheck = _global['__Zone_enable_cross_context_check'] || false;\n    var ieOrEdge = isIEOrEdge();\n    var ADD_EVENT_LISTENER_SOURCE = '.addEventListener:';\n    var FUNCTION_WRAPPER = '[object FunctionWrapper]';\n    var BROWSER_TOOLS = 'function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }';\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (var i = 0; i < eventNames.length; i++) {\n        var eventName = eventNames[i];\n        var falseEventName = eventName + FALSE_STR;\n        var trueEventName = eventName + TRUE_STR;\n        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    //  predefine all task.source string\n    for (var i = 0; i < WTF_ISSUE_555.length; i++) {\n        var target = WTF_ISSUE_555_ARRAY[i];\n        var targets = globalSources[target] = {};\n        for (var j = 0; j < eventNames.length; j++) {\n            var eventName = eventNames[j];\n            targets[eventName] = target + ADD_EVENT_LISTENER_SOURCE + eventName;\n        }\n    }\n    var checkIEAndCrossContext = function (nativeDelegate, delegate, target, args) {\n        if (!isDisableIECheck && ieOrEdge) {\n            if (isEnableCrossContextCheck) {\n                try {\n                    var testString = delegate.toString();\n                    if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                        nativeDelegate.apply(target, args);\n                        return false;\n                    }\n                }\n                catch (error) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n            else {\n                var testString = delegate.toString();\n                if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n        }\n        else if (isEnableCrossContextCheck) {\n            try {\n                delegate.toString();\n            }\n            catch (error) {\n                nativeDelegate.apply(target, args);\n                return false;\n            }\n        }\n        return true;\n    };\n    var apiTypes = [];\n    for (var i = 0; i < apis.length; i++) {\n        var type = _global[apis[i]];\n        apiTypes.push(type && type.prototype);\n    }\n    // vh is validateHandler to check event handler\n    // is valid or not(for security check)\n    patchEventTarget(_global, apiTypes, { vh: checkIEAndCrossContext });\n    api.patchEventTarget = patchEventTarget;\n    return true;\n}\nfunction patchEvent(global, api) {\n    patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(target, targetName, method, callbacks) {\n    var symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    var nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                var source = targetName + \".\" + method + \"::\" + callback;\n                var prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    var descriptor = ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = wrapWithCurrentZone(descriptor.value, source);\n                        _redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    attachOriginToPatched(target[method], nativeDelegate);\n}\nfunction registerElementPatch(_global) {\n    if ((!isBrowser && !isMix) || !('registerElement' in _global.document)) {\n        return;\n    }\n    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\n    patchCallbacks(document, 'Document', 'registerElement', callbacks);\n}\nfunction patchCustomElements(_global) {\n    if ((!isBrowser && !isMix) || !('customElements' in _global)) {\n        return;\n    }\n    var callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    patchCallbacks(_global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('util', function (global, Zone, api) {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n});\nZone.__load_patch('timers', function (global) {\n    var set = 'set';\n    var clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', function (global) {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', function (global, Zone) {\n    var blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (var i = 0; i < blockingMethods.length; i++) {\n        var name_1 = blockingMethods[i];\n        patchMethod(global, name_1, function (delegate, symbol, name) {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', function (global, Zone, api) {\n    // load blackListEvents from global\n    var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', function (global, Zone, api) {\n    propertyDescriptorPatch(api, global);\n    propertyPatch();\n});\nZone.__load_patch('customElements', function (global, Zone, api) {\n    registerElementPatch(global);\n    patchCustomElements(global);\n});\nZone.__load_patch('canvas', function (global) {\n    var HTMLCanvasElement = global['HTMLCanvasElement'];\n    if (typeof HTMLCanvasElement !== 'undefined' && HTMLCanvasElement.prototype &&\n        HTMLCanvasElement.prototype.toBlob) {\n        patchMacroTask(HTMLCanvasElement.prototype, 'toBlob', function (self, args) {\n            return { name: 'HTMLCanvasElement.toBlob', target: self, cbIdx: 0, args: args };\n        });\n    }\n});\nZone.__load_patch('XHR', function (global, Zone) {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    var XHR_TASK = zoneSymbol('xhrTask');\n    var XHR_SYNC = zoneSymbol('xhrSync');\n    var XHR_LISTENER = zoneSymbol('xhrListener');\n    var XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    var XHR_URL = zoneSymbol('xhrURL');\n    var XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            var XMLHttpRequestEventTarget_1 = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget_1) {\n                var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget_1.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        var READY_STATE_CHANGE = 'readystatechange';\n        var SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            var data = task.data;\n            var target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            var listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            var newListener = target[XHR_LISTENER] = function () {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        var loadTasks = target['__zone_symbol__loadfalse'];\n                        if (loadTasks && loadTasks.length > 0) {\n                            var oriInvoke_1 = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                var loadTasks = target['__zone_symbol__loadfalse'];\n                                for (var i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke_1.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            var storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            var data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () { return function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        }; });\n        var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        var fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        var fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () { return function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                var options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                var task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        }; });\n        var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () { return function (self, args) {\n            var task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        }; });\n    }\n});\nZone.__load_patch('geolocation', function (global) {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', function (global, Zone) {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            var eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(function (eventTask) {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                var PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    var evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))\n\n/***/ }),\n\n/***/ 262:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = singleSpaAngular2;\nvar defaultOpts = {\n  // required opts\n  angularPlatform: null,\n  mainModule: null,\n  template: null,\n  // optional opts\n  Router: null,\n  domElementGetter: null // only optional if you provide a domElementGetter as a custom prop\n};\n\nfunction singleSpaAngular2(userOpts) {\n  if ((typeof userOpts === 'undefined' ? 'undefined' : _typeof(userOpts)) !== 'object') {\n    throw new Error('single-spa-angular2 requires a configuration object');\n  }\n\n  var opts = _extends({}, defaultOpts, userOpts);\n\n  if (!opts.angularPlatform) {\n    throw new Error('single-spa-angular2 must be passed opts.angularPlatform. Usually this should be the return value of platformBrowserDynamic()');\n  }\n\n  if (!opts.mainModule) {\n    throw new Error('single-spa-angular2 must be passed opts.mainModule, which is the Angular module to bootstrap');\n  }\n\n  if (typeof opts.template !== 'string') {\n    throw new Error('single-spa-angular2 must be passed opts.template string');\n  }\n\n  return {\n    bootstrap: bootstrap.bind(null, opts),\n    mount: mount.bind(null, opts),\n    unmount: unmount.bind(null, opts)\n  };\n}\n\nfunction bootstrap(opts) {\n  return Promise.resolve();\n}\n\nfunction mount(opts, props) {\n  return Promise.resolve().then(function () {\n    var domElementGetter = chooseDomElementGetter(opts, props);\n    if (!domElementGetter) {\n      throw new Error('cannot mount angular application \\'' + (props.name || props.appName) + '\\' without a domElementGetter provided either as an opt or a prop');\n    }\n\n    var containerEl = getContainerEl(domElementGetter);\n    containerEl.innerHTML = opts.template;\n  }).then(function () {\n    return opts.angularPlatform.bootstrapModule(opts.mainModule).then(function (module) {\n      return opts.bootstrappedModule = module;\n    });\n  });\n}\n\nfunction unmount(opts, props) {\n  return new Promise(function (resolve, reject) {\n    if (opts.Router) {\n      var routerRef = opts.bootstrappedModule.injector.get(opts.Router);\n      routerRef.dispose();\n    }\n    opts.bootstrappedModule.destroy();\n    delete opts.bootstrappedModule;\n    resolve();\n  });\n}\n\nfunction getContainerEl(domElementGetter) {\n  var element = domElementGetter();\n  if (!element) {\n    throw new Error('domElementGetter did not return a valid dom element');\n  }\n\n  return element;\n}\n\nfunction chooseDomElementGetter(opts, props) {\n  return props && props.customProps && props.customProps.domElementGetter ? props.customProps.domElementGetter : opts.domElementGetter;\n}\n//# sourceMappingURL=single-spa-angular2.js.map\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(15);\r\nvar platform_browser_1 = __webpack_require__(63);\r\nvar http_1 = __webpack_require__(260);\r\nvar angular_component_ts_1 = __webpack_require__(264);\r\nvar core_2 = __webpack_require__(15);\r\nvar common_1 = __webpack_require__(28);\r\ncore_2.enableProdMode();\r\nvar MainModule = /** @class */ (function () {\r\n    function MainModule() {\r\n    }\r\n    MainModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                platform_browser_1.BrowserModule, http_1.HttpClientModule, common_1.CommonModule\r\n            ],\r\n            providers: [{ provide: common_1.APP_BASE_HREF, useValue: '/angular/' }],\r\n            declarations: [\r\n                angular_component_ts_1.default\r\n            ],\r\n            bootstrap: [angular_component_ts_1.default]\r\n        })\r\n    ], MainModule);\r\n    return MainModule;\r\n}());\r\nexports.default = MainModule;\r\n\n\n/***/ }),\n\n/***/ 264:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(15);\r\nvar http_1 = __webpack_require__(260);\r\nvar AngularApp = /** @class */ (function () {\r\n    function AngularApp(changeDetector, http) {\r\n        this.changeDetector = changeDetector;\r\n        this.http = http;\r\n        this.listData = [];\r\n        this.isLoading = true;\r\n        this.getData();\r\n    }\r\n    AngularApp.prototype.getData = function () {\r\n        var _this = this;\r\n        this.http.get('https://reqres.in/api/users?page=1').subscribe(function (results1) {\r\n            _this.http.get('https://reqres.in/api/users?page=2').subscribe(function (results2) {\r\n                return setTimeout(function () {\r\n                    _this.listData = results1['data'].concat(results2['data']);\r\n                    _this.isLoading = false;\r\n                }, 1500);\r\n            });\r\n        });\r\n    };\r\n    AngularApp = __decorate([\r\n        core_1.Component({\r\n            selector: 'AngularApp',\r\n            templateUrl: '/src/angular/angular.component.html'\r\n        }),\r\n        __param(0, core_1.Inject(core_1.ChangeDetectorRef)),\r\n        __param(1, core_1.Inject(http_1.HttpClient))\r\n    ], AngularApp);\r\n    return AngularApp;\r\n}());\r\nexports.default = AngularApp;\r\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","import 'zone.js'\r\nimport 'reflect-metadata'\r\nimport singleSpaAngular from 'single-spa-angular2'\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\r\nimport mainModule from './main-module.ts'\r\nimport { Router } from '@angular/router'\r\nimport { NgZone } from '@angular/core'\r\n\r\nconst domElementGetter = () => {\r\n  let el = document.getElementById('angular')\r\n  if (!el) {\r\n    el = document.createElement('div')\r\n    el.id = 'angular'\r\n    document.body.appendChild(el)\r\n  }\r\n\r\n  return el\r\n}\r\n\r\nconst ngLifecycles = singleSpaAngular({\r\n  domElementGetter,\r\n  mainModule,\r\n  angularPlatform: platformBrowserDynamic(),\r\n  template: `<AngularApp />`,\r\n  Router,\r\n  NgZone\r\n})\r\n\r\nexport const bootstrap = props => ngLifecycles.bootstrap(props)\r\n\r\nexport const mount = props => ngLifecycles.mount(props)\r\n\r\nexport function unmount(props) {\r\n  return Promise\r\n    .resolve()\r\n    .then(() => {\r\n      let el = document.getElementById(\"angular\");\r\n      el.remove();\r\n    })\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular/index.js","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.4.7\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, InjectionToken, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n    return HttpBackend;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@experimental\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immuatable - all mutation operations return a new instance.\n *\n * \\@experimental\n */\nvar HttpParams = (function () {\n    /**\n     * @param {?=} options\n     */\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        this.map = !!options.fromString ? paramParser(options.fromString, this.encoder) : null;\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var /** @type {?} */ res = ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return ((((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((((((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@experimental\n */\nvar HttpHeaders = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name = line.slice(0, index);\n                        var key = name.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@experimental\n */\nvar HttpRequest = (function () {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = third || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HttpEventType = {};\nHttpEventType.Sent = 0;\nHttpEventType.UploadProgress = 1;\nHttpEventType.ResponseHeader = 2;\nHttpEventType.DownloadProgress = 3;\nHttpEventType.Response = 4;\nHttpEventType.User = 5;\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@experimental\n */\nvar HttpHeaderResponse = (function (_super) {\n    tslib_1.__extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@experimental\n */\nvar HttpResponse = (function (_super) {\n    tslib_1.__extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@experimental\n */\nvar HttpErrorResponse = (function (_super) {\n    tslib_1.__extends(HttpErrorResponse, _super);\n    /**\n     * @param {?} init\n     */\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@experimental\n */\nvar HttpClient = (function () {\n    /**\n     * @param {?} handler\n     */\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: options.headers,\n                params: options.params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = concatMap.call(of(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = filter.call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return map.call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    return HttpClient;\n}());\nHttpClient.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpClient.ctorParameters = function () { return [\n    { type: HttpHandler, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@experimental\n */\nvar HttpInterceptorHandler = (function () {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@experimental\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    return NoopInterceptor;\n}());\nNoopInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNoopInterceptor.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@experimental\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@experimental\n */\nvar JsonpClientBackend = (function () {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    return JsonpClientBackend;\n}());\nJsonpClientBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpClientBackend.ctorParameters = function () { return [\n    { type: JsonpCallbackContext, },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@experimental\n */\nvar JsonpInterceptor = (function () {\n    /**\n     * @param {?} jsonp\n     */\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    return JsonpInterceptor;\n}());\nJsonpInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonpInterceptor.ctorParameters = function () { return [\n    { type: JsonpClientBackend, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@experimental\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@experimental\n */\nvar HttpXhrBackend = (function () {\n    /**\n     * @param {?} xhrFactory\n     */\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && req.responseType === 'json' && typeof body === 'string') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = ({ error: error, text: body });\n                    }\n                }\n                else if (!ok && req.responseType === 'json' && typeof body === 'string') {\n                    try {\n                        // Attempt to parse the body as JSON.\n                        body = JSON.parse(body);\n                    }\n                    catch (error) {\n                        // Cannot be certain that the body was meant to be parsed as JSON.\n                        // Leave the body as a string.\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    return HttpXhrBackend;\n}());\nHttpXhrBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXhrBackend.ctorParameters = function () { return [\n    { type: XhrFactory, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@experimental\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    return HttpXsrfCookieExtractor;\n}());\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfCookieExtractor.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] },] },\n]; };\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    return HttpXsrfInterceptor;\n}());\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttpXsrfInterceptor.ctorParameters = function () { return [\n    { type: HttpXsrfTokenExtractor, },\n    { type: undefined, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@experimental\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@experimental\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@experimental\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    return HttpClientXsrfModule;\n}());\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientXsrfModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@experimental\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    return HttpClientModule;\n}());\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                providers: [\n                    HttpClient,\n                    // HttpHandler is the backend + interceptors and is constructed\n                    // using the interceptingHandler factory function.\n                    {\n                        provide: HttpHandler,\n                        useFactory: interceptingHandler,\n                        deps: [HttpBackend, [new Optional(), new Inject(HTTP_INTERCEPTORS)]],\n                    },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientModule.ctorParameters = function () { return []; };\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@experimental\n */\nvar HttpClientJsonpModule = (function () {\n    function HttpClientJsonpModule() {\n    }\n    return HttpClientJsonpModule;\n}());\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpClientJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, interceptingHandler as ɵinterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor, NoopInterceptor as ɵa, JsonpCallbackContext as ɵb, jsonpCallbackContext as ɵc, BrowserXhr as ɵd, HttpXsrfCookieExtractor as ɵg, HttpXsrfInterceptor as ɵh, XSRF_COOKIE_NAME as ɵe, XSRF_HEADER_NAME as ɵf };\n//# sourceMappingURL=http.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/common/@angular/common/http.es5.js\n// module id = 260\n// module chunks = 0","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Zone$1 = (function (global) {\n    var performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    var checkDuplicate = global[('__zone_symbol__forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    var Zone = /** @class */ (function () {\n        function Zone(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"root\", {\n            get: function () {\n                var zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.__load_patch = function (name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                if (checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                var perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        };\n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            var reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleTask = function (task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                var newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(\"can not reschedule task to \" + this.name + \" which is descendants of the original zone \" + task.zone.name);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            var zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        };\n        Zone.prototype._updateTaskCount = function (task, count) {\n            var zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (var i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        };\n        Zone.__symbol__ = __symbol__;\n        return Zone;\n    }());\n    var DELEGATE_ZS = {\n        name: '',\n        onHasTask: function (delegate, _, target, hasTaskState) { return delegate.hasTask(target, hasTaskState); },\n        onScheduleTask: function (delegate, _, target, task) {\n            return delegate.scheduleTask(target, task);\n        },\n        onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) {\n            return delegate.invokeTask(target, task, applyThis, applyArgs);\n        },\n        onCancelTask: function (delegate, _, target, task) { return delegate.cancelTask(target, task); }\n    };\n    var ZoneDelegate = /** @class */ (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            var returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = /** @class */ (function () {\n        function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        ZoneTask.invokeTask = function (task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        };\n        Object.defineProperty(ZoneTask.prototype, \"zone\", {\n            get: function () {\n                return this._zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ZoneTask.prototype, \"state\", {\n            get: function () {\n                return this._state;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ZoneTask.prototype.cancelScheduleRequest = function () {\n            this._transitionTo(notScheduled, scheduling);\n        };\n        ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(this.type + \" '\" + this.source + \"': can not transition to '\" + toState + \"', expecting state '\" + fromState1 + \"'\" + (fromState2 ? ' or \\'' + fromState2 + '\\'' : '') + \", was '\" + this._state + \"'.\");\n            }\n        };\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        };\n        return ZoneTask;\n    }());\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                var nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var NO_ZONE = { name: 'NO ZONE' };\n    var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    var patches = {};\n    var _api = {\n        symbol: __symbol__,\n        currentZoneFrame: function () { return _currentZoneFrame; },\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: function () { return !Zone[__symbol__('ignoreConsoleErrorUncaughtError')]; },\n        patchEventTarget: function () { return []; },\n        patchOnProperties: noop,\n        patchMethod: function () { return noop; },\n        bindArguments: function () { return []; },\n        patchThen: function () { return noop; },\n        setNativePromise: function (NativePromise) {\n            // sometimes NativePromise.resolve static function\n            // is not ready yet, (such as core-js/es6.promise)\n            // so we need to check here.\n            if (NativePromise && typeof NativePromise.resolve === 'function') {\n                nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n            }\n        },\n    };\n    var _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    var _currentTask = null;\n    var _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nZone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {\n    var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            var className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    var __symbol__ = api.symbol;\n    var _uncaughtPromiseErrors = [];\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var creationTrace = '__creationTrace__';\n    api.onUnhandledError = function (e) {\n        if (api.showUncaughtError()) {\n            var rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = function () {\n        while (_uncaughtPromiseErrors.length) {\n            var _loop_1 = function () {\n                var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(function () {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            };\n            while (_uncaughtPromiseErrors.length) {\n                _loop_1();\n            }\n        }\n    };\n    var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (handler && typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var symbolFinally = __symbol__('finally');\n    var symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    var symbolParentPromiseState = __symbol__('parentPromiseState');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    var once = function () {\n        var wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    var TYPE_ERROR = 'Promise resolved with itself';\n    var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        var onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            var then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(function () {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(function () {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    var trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        // try to print more readable error log\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        var error_1 = err;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                var handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var promiseState = promise[symbolState];\n        var delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                var parentPromiseValue = promise[symbolValue];\n                var isFinallyPromise = chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                var value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    var ZoneAwarePromise = /** @class */ (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var e_1, _a;\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            try {\n                for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n                    var value = values_1_1.value;\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var e_2, _a;\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            var unresolvedCount = 2;\n            var valueIndex = 0;\n            var resolvedValues = [];\n            var _loop_2 = function (value) {\n                if (!isThenable(value)) {\n                    value = this_1.resolve(value);\n                }\n                var curValueIndex = valueIndex;\n                value.then(function (value) {\n                    resolvedValues[curValueIndex] = value;\n                    unresolvedCount--;\n                    if (unresolvedCount === 0) {\n                        resolve(resolvedValues);\n                    }\n                }, reject);\n                unresolvedCount++;\n                valueIndex++;\n            };\n            var this_1 = this;\n            try {\n                for (var values_2 = __values(values), values_2_1 = values_2.next(); !values_2_1.done; values_2_1 = values_2.next()) {\n                    var value = values_2_1.value;\n                    _loop_2(value);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (values_2_1 && !values_2_1.done && (_a = values_2.return)) _a.call(values_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        ZoneAwarePromise.prototype.finally = function (onFinally) {\n            var chainPromise = new this.constructor(null);\n            chainPromise[symbolFinally] = symbolFinally;\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[symbolPromise] = global['Promise'];\n    var ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n    var desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n    if (!desc || desc.configurable) {\n        desc && delete desc.writable;\n        desc && delete desc.value;\n        if (!desc) {\n            desc = { configurable: true, enumerable: true };\n        }\n        desc.get = function () {\n            // if we already set ZoneAwarePromise, use patched one\n            // otherwise return native one.\n            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n        };\n        desc.set = function (NewNativePromise) {\n            if (NewNativePromise === ZoneAwarePromise) {\n                // if the NewNativePromise is ZoneAwarePromise\n                // save to global\n                global[ZONE_AWARE_PROMISE] = NewNativePromise;\n            }\n            else {\n                // if the NewNativePromise is not ZoneAwarePromise\n                // for example: after load zone.js, some library just\n                // set es6-promise to global, if we set it to global\n                // directly, assertZonePatched will fail and angular\n                // will not loaded, so we just set the NewNativePromise\n                // to global[symbolPromise], so the result is just like\n                // we load ES6 Promise before zone.js\n                global[symbolPromise] = NewNativePromise;\n                if (!NewNativePromise.prototype[symbolThen]) {\n                    patchThen(NewNativePromise);\n                }\n                api.setNativePromise(NewNativePromise);\n            }\n        };\n        ObjectDefineProperty(global, 'Promise', desc);\n    }\n    global['Promise'] = ZoneAwarePromise;\n    var symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        var proto = Ctor.prototype;\n        var prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        var originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            var _this = this;\n            var wrapped = new ZoneAwarePromise(function (resolve, reject) {\n                originalThen.call(_this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    if (NativePromise) {\n        patchThen(NativePromise);\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('fetch', function (global, Zone, api) {\n    var fetch = global['fetch'];\n    var ZoneAwarePromise = global.Promise;\n    var symbolThenPatched = api.symbol('thenPatched');\n    var fetchTaskScheduling = api.symbol('fetchTaskScheduling');\n    var fetchTaskAborting = api.symbol('fetchTaskAborting');\n    if (typeof fetch !== 'function') {\n        return;\n    }\n    var OriginalAbortController = global['AbortController'];\n    var supportAbort = typeof OriginalAbortController === 'function';\n    var abortNative = null;\n    if (supportAbort) {\n        global['AbortController'] = function () {\n            var abortController = new OriginalAbortController();\n            var signal = abortController.signal;\n            signal.abortController = abortController;\n            return abortController;\n        };\n        abortNative = api.patchMethod(OriginalAbortController.prototype, 'abort', function (delegate) { return function (self, args) {\n            if (self.task) {\n                return self.task.zone.cancelTask(self.task);\n            }\n            return delegate.apply(self, args);\n        }; });\n    }\n    var placeholder = function () { };\n    global['fetch'] = function () {\n        var _this = this;\n        var args = Array.prototype.slice.call(arguments);\n        var options = args.length > 1 ? args[1] : null;\n        var signal = options && options.signal;\n        return new Promise(function (res, rej) {\n            var task = Zone.current.scheduleMacroTask('fetch', placeholder, args, function () {\n                var fetchPromise;\n                var zone = Zone.current;\n                try {\n                    zone[fetchTaskScheduling] = true;\n                    fetchPromise = fetch.apply(_this, args);\n                }\n                catch (error) {\n                    rej(error);\n                    return;\n                }\n                finally {\n                    zone[fetchTaskScheduling] = false;\n                }\n                if (!(fetchPromise instanceof ZoneAwarePromise)) {\n                    var ctor = fetchPromise.constructor;\n                    if (!ctor[symbolThenPatched]) {\n                        api.patchThen(ctor);\n                    }\n                }\n                fetchPromise.then(function (resource) {\n                    if (task.state !== 'notScheduled') {\n                        task.invoke();\n                    }\n                    res(resource);\n                }, function (error) {\n                    if (task.state !== 'notScheduled') {\n                        task.invoke();\n                    }\n                    rej(error);\n                });\n            }, function () {\n                if (!supportAbort) {\n                    rej('No AbortController supported, can not cancel fetch');\n                    return;\n                }\n                if (signal && signal.abortController && !signal.aborted &&\n                    typeof signal.abortController.abort === 'function' && abortNative) {\n                    try {\n                        Zone.current[fetchTaskAborting] = true;\n                        abortNative.call(signal.abortController);\n                    }\n                    finally {\n                        Zone.current[fetchTaskAborting] = false;\n                    }\n                }\n                else {\n                    rej('cancel fetch need a AbortController.signal');\n                }\n            });\n            if (signal && signal.abortController) {\n                signal.abortController.task = task;\n            }\n        });\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nvar ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nvar ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nvar ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nvar ObjectCreate = Object.create;\n/** Array.prototype.slice */\nvar ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nvar ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nvar REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nvar ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nvar ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nvar TRUE_STR = 'true';\n/** false string const */\nvar FALSE_STR = 'false';\n/** __zone_symbol__ string const */\nvar ZONE_SYMBOL_PREFIX = '__zone_symbol__';\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nvar zoneSymbol = Zone.__symbol__;\nvar isWindowExists = typeof window !== 'undefined';\nvar internalWindow = isWindowExists ? window : undefined;\nvar _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nvar REMOVE_ATTRIBUTE = 'removeAttribute';\nvar NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    var source = prototype.constructor['name'];\n    var _loop_1 = function (i) {\n        var name_1 = fnNames[i];\n        var delegate = prototype[name_1];\n        if (delegate) {\n            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name_1);\n            if (!isPropertyWritable(prototypeDesc)) {\n                return \"continue\";\n            }\n            prototype[name_1] = (function (delegate) {\n                var patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    };\n    for (var i = 0; i < fnNames.length; i++) {\n        _loop_1(i);\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nvar isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nvar zoneSymbolEventNames = {};\nvar wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    var eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    var target = this || event.target || _global;\n    var listener = target[eventNameSymbol];\n    var result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        var errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    var desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    var onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    var originalDescGet = desc.get;\n    var originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    var eventName = prop.substr(2);\n    var eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        var previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        var listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            var value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        var onProperties = [];\n        for (var prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (var j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    var OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        var a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    var instance = new OriginalClass(function () { });\n    var prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n        return;\n    }\n    var symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach(function (symbol) {\n        var desc = Object.getOwnPropertyDescriptor(src, symbol);\n        Object.defineProperty(dest, symbol, {\n            get: function () {\n                return src[symbol];\n            },\n            set: function (value) {\n                if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                    // if src[symbol] is not writable or not have a setter, just return\n                    return;\n                }\n                src[symbol] = value;\n            },\n            enumerable: desc ? desc.enumerable : true,\n            configurable: desc ? desc.configurable : true\n        });\n    });\n}\nvar shouldCopySymbolProperties = false;\n\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate = null;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            var patchDelegate_1 = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate_1(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n            if (shouldCopySymbolProperties) {\n                copySymbolProperties(delegate, proto[name]);\n            }\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    var setNative = null;\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n        var meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    }; });\n}\n\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nvar isDetectedIEOrEdge = false;\nvar ieOrEdge = false;\nfunction isIE() {\n    try {\n        var ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        var ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n        return ieOrEdge;\n    }\n    catch (error) {\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', function (global) {\n    // patch Func.prototype.toString to let them look like native\n    var originalFunctionToString = Function.prototype.toString;\n    var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    var PROMISE_SYMBOL = zoneSymbol('Promise');\n    var ERROR_SYMBOL = zoneSymbol('Error');\n    var newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.apply(this[ORIGINAL_DELEGATE_SYMBOL], arguments);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                var nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.apply(nativePromise, arguments);\n                }\n            }\n            if (this === Error) {\n                var nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.apply(nativeError, arguments);\n                }\n            }\n        }\n        return originalFunctionToString.apply(this, arguments);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    var originalObjectToString = Object.prototype.toString;\n    var PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.apply(this, arguments);\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nvar passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nvar OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nvar zoneSymbolEventNames$1 = {};\nvar globalSources = {};\nvar EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\\w+)(true|false)$/;\nvar IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');\nfunction patchEventTarget(_global, apis, patchOptions) {\n    var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    var PREPEND_EVENT_LISTENER = 'prependListener';\n    var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    var invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        var delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = function (event) { return delegate.handleEvent(event); };\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        var options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            var delegate_1 = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate_1, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    var globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    var globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        var useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        var validateHandler = patchOptions && patchOptions.vh;\n        var checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        var returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        var proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        var eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        var taskData = {};\n        var nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        var nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        var nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        var nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        var nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        function checkIsPassive(task) {\n            if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                // options is a non-null non-undefined object\n                // passive is not supported\n                // don't pass options as object\n                // just pass capture as a boolean\n                task.options = !!taskData.options.capture;\n                taskData.options = task.options;\n            }\n        }\n        var customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        var customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                var symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                var symbolEventName = void 0;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (var i = 0; i < existingTasks.length; i++) {\n                        var existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        var customScheduleNonGlobal = function (task) {\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        var compareTaskCallbackVsDelegate = function (task, delegate) {\n            var typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        var compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        var blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];\n        var makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget, prepend) {\n            if (returnTarget === void 0) { returnTarget = false; }\n            if (prepend === void 0) { prepend = false; }\n            return function () {\n                var target = this || _global;\n                var eventName = arguments[0];\n                var delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                var isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                var options = arguments[2];\n                if (blackListedEvents) {\n                    // check black list\n                    for (var i = 0; i < blackListedEvents.length; i++) {\n                        if (eventName === blackListedEvents[i]) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                    }\n                }\n                var capture;\n                var once = false;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                    once = options ? !!options.once : false;\n                }\n                var zone = Zone.current;\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                var symbolEventName;\n                if (!symbolEventNames) {\n                    // the code is duplicate, but I just want to get some better performance\n                    var falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                    var trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                    var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                    var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                    zoneSymbolEventNames$1[eventName] = {};\n                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                    symbolEventName = capture ? symbolCapture : symbol;\n                }\n                else {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = target[symbolEventName];\n                var isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (var i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                var source;\n                var constructorName = target.constructor['name'];\n                var targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var options = arguments[2];\n            var capture;\n            if (options === undefined) {\n                capture = false;\n            }\n            else if (options === true) {\n                capture = true;\n            }\n            else if (options === false) {\n                capture = false;\n            }\n            else {\n                capture = options ? !!options.capture : false;\n            }\n            var delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            var symbolEventNames = zoneSymbolEventNames$1[eventName];\n            var symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            var existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (var i = 0; i < existingTasks.length; i++) {\n                    var existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var listeners = [];\n            var tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (var i = 0; i < tasks.length; i++) {\n                var task = tasks[i];\n                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            if (!eventName) {\n                var keys = Object.keys(target);\n                for (var i = 0; i < keys.length; i++) {\n                    var prop = keys[i];\n                    var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    var evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    var symbolEventName = symbolEventNames[FALSE_STR];\n                    var symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    var tasks = target[symbolEventName];\n                    var captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        var removeTasks = tasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        var removeTasks = captureTasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    var results = [];\n    for (var i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    var foundTasks = [];\n    for (var prop in target) {\n        var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        var evtName = match && match[1];\n        if (evtName && (!eventName || evtName === eventName)) {\n            var tasks = target[prop];\n            if (tasks) {\n                for (var i = 0; i < tasks.length; i++) {\n                    foundTasks.push(tasks[i]);\n                }\n            }\n        }\n    }\n    return foundTasks;\n}\nfunction patchEventPrototype(global, api) {\n    var Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) { return function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        }; });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nvar taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                var task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var id = args[0];\n            var task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\nvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nvar _create = Object.create;\nvar unconfigurablesKey = zoneSymbol('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        var originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        var desc = _getOwnPropertyDescriptor(obj, prop);\n        if (desc && isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\nfunction _redefineProperty(obj, prop, desc) {\n    var originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    // issue-927, if the desc is frozen, don't try to change the desc\n    if (!Object.isFrozen(desc)) {\n        desc.configurable = true;\n    }\n    if (!desc.configurable) {\n        // issue-927, if the obj is frozen, don't try to set the desc to obj\n        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        if (obj[unconfigurablesKey]) {\n            obj[unconfigurablesKey][prop] = true;\n        }\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (error) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (error) {\n                var descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (error) {\n                    descJson = desc.toString();\n                }\n                console.log(\"Attempting to configure '\" + prop + \"' with descriptor '\" + descJson + \"' on object '\" + obj + \"' and got error, giving up: \" + error);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// we have to patch the instance since the proto is non-configurable\nfunction apply(api, _global) {\n    var WS = _global.WebSocket;\n    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n    // On older Chrome, no need since EventTarget was already patched\n    if (!_global.EventTarget) {\n        patchEventTarget(_global, [WS.prototype]);\n    }\n    _global.WebSocket = function (x, y) {\n        var socket = arguments.length > 1 ? new WS(x, y) : new WS(x);\n        var proxySocket;\n        var proxySocketProto;\n        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n        var onmessageDesc = ObjectGetOwnPropertyDescriptor(socket, 'onmessage');\n        if (onmessageDesc && onmessageDesc.configurable === false) {\n            proxySocket = ObjectCreate(socket);\n            // socket have own property descriptor 'onopen', 'onmessage', 'onclose', 'onerror'\n            // but proxySocket not, so we will keep socket as prototype and pass it to\n            // patchOnProperties method\n            proxySocketProto = socket;\n            [ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR, 'send', 'close'].forEach(function (propName) {\n                proxySocket[propName] = function () {\n                    var args = ArraySlice.call(arguments);\n                    if (propName === ADD_EVENT_LISTENER_STR || propName === REMOVE_EVENT_LISTENER_STR) {\n                        var eventName = args.length > 0 ? args[0] : undefined;\n                        if (eventName) {\n                            var propertySymbol = Zone.__symbol__('ON_PROPERTY' + eventName);\n                            socket[propertySymbol] = proxySocket[propertySymbol];\n                        }\n                    }\n                    return socket[propName].apply(socket, args);\n                };\n            });\n        }\n        else {\n            // we can patch the real socket\n            proxySocket = socket;\n        }\n        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open'], proxySocketProto);\n        return proxySocket;\n    };\n    var globalWebSocket = _global['WebSocket'];\n    for (var prop in WS) {\n        globalWebSocket[prop] = WS[prop];\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nvar globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nvar documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nvar windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplyconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nvar htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nvar mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nvar ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nvar webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nvar formEventNames = ['autocomplete', 'autocompleteerror'];\nvar detailEventNames = ['toggle'];\nvar frameEventNames = ['load'];\nvar frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nvar marqueeEventNames = ['bounce', 'finish', 'start'];\nvar XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nvar IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nvar websocketEventNames = ['close', 'error', 'open', 'message'];\nvar workerEventNames = ['error', 'message'];\nvar eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    var tip = ignoreProperties.filter(function (ip) { return ip.target === target; });\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    var targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(function (op) { return targetIgnoreProperties.indexOf(op) === -1; });\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    var filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    var supportsWebSocket = typeof WebSocket !== 'undefined';\n    if (canPatchViaPropertyDescriptor()) {\n        var ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            var internalWindow = window;\n            var ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            var HTMLMarqueeElement_1 = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement_1) {\n                patchFilteredProperties(HTMLMarqueeElement_1.prototype, marqueeEventNames, ignoreProperties);\n            }\n            var Worker_1 = internalWindow['Worker'];\n            if (Worker_1) {\n                patchFilteredProperties(Worker_1.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        var XMLHttpRequestEventTarget_1 = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget_1) {\n            patchFilteredProperties(XMLHttpRequestEventTarget_1 && XMLHttpRequestEventTarget_1.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n    else {\n        // Safari, Android browsers (Jelly Bean)\n        patchViaCapturingAllTheEvents();\n        patchClass('XMLHttpRequest');\n        if (supportsWebSocket) {\n            apply(api, _global);\n        }\n    }\n}\nfunction canPatchViaPropertyDescriptor() {\n    if ((isBrowser || isMix) && !ObjectGetOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n        typeof Element !== 'undefined') {\n        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n        // IDL interface attributes are not configurable\n        var desc = ObjectGetOwnPropertyDescriptor(Element.prototype, 'onclick');\n        if (desc && !desc.configurable)\n            return false;\n    }\n    var ON_READY_STATE_CHANGE = 'onreadystatechange';\n    var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n    var xhrDesc = ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE);\n    // add enumerable and configurable here because in opera\n    // by default XMLHttpRequest.prototype.onreadystatechange is undefined\n    // without adding enumerable and configurable will cause onreadystatechange\n    // non-configurable\n    // and if XMLHttpRequest.prototype.onreadystatechange is undefined,\n    // we should set a real desc instead a fake one\n    if (xhrDesc) {\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return true;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var result = !!req.onreadystatechange;\n        // restore original desc\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, xhrDesc || {});\n        return result;\n    }\n    else {\n        var SYMBOL_FAKE_ONREADYSTATECHANGE_1 = zoneSymbol('fake');\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1];\n            },\n            set: function (value) {\n                this[SYMBOL_FAKE_ONREADYSTATECHANGE_1] = value;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var detectFunc = function () { };\n        req.onreadystatechange = detectFunc;\n        var result = req[SYMBOL_FAKE_ONREADYSTATECHANGE_1] === detectFunc;\n        req.onreadystatechange = null;\n        return result;\n    }\n}\nvar unboundKey = zoneSymbol('unbound');\n// Whenever any eventListener fires, we check the eventListener target and all parents\n// for `onwhatever` properties and replace them with zone-bound functions\n// - Chrome (for now)\nfunction patchViaCapturingAllTheEvents() {\n    var _loop_1 = function (i) {\n        var property = eventNames[i];\n        var onproperty = 'on' + property;\n        self.addEventListener(property, function (event) {\n            var elt = event.target, bound, source;\n            if (elt) {\n                source = elt.constructor['name'] + '.' + onproperty;\n            }\n            else {\n                source = 'unknown.' + onproperty;\n            }\n            while (elt) {\n                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n                    bound = wrapWithCurrentZone(elt[onproperty], source);\n                    bound[unboundKey] = elt[onproperty];\n                    elt[onproperty] = bound;\n                }\n                elt = elt.parentElement;\n            }\n        }, true);\n    };\n    for (var i = 0; i < eventNames.length; i++) {\n        _loop_1(i);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\n    var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'\n        .split(',');\n    var EVENT_TARGET = 'EventTarget';\n    var apis = [];\n    var isWtf = _global['wtf'];\n    var WTF_ISSUE_555_ARRAY = WTF_ISSUE_555.split(',');\n    if (isWtf) {\n        // Workaround for: https://github.com/google/tracing-framework/issues/555\n        apis = WTF_ISSUE_555_ARRAY.map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\n    }\n    else if (_global[EVENT_TARGET]) {\n        apis.push(EVENT_TARGET);\n    }\n    else {\n        // Note: EventTarget is not available in all browsers,\n        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n        apis = NO_EVENT_TARGET;\n    }\n    var isDisableIECheck = _global['__Zone_disable_IE_check'] || false;\n    var isEnableCrossContextCheck = _global['__Zone_enable_cross_context_check'] || false;\n    var ieOrEdge = isIEOrEdge();\n    var ADD_EVENT_LISTENER_SOURCE = '.addEventListener:';\n    var FUNCTION_WRAPPER = '[object FunctionWrapper]';\n    var BROWSER_TOOLS = 'function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }';\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (var i = 0; i < eventNames.length; i++) {\n        var eventName = eventNames[i];\n        var falseEventName = eventName + FALSE_STR;\n        var trueEventName = eventName + TRUE_STR;\n        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    //  predefine all task.source string\n    for (var i = 0; i < WTF_ISSUE_555.length; i++) {\n        var target = WTF_ISSUE_555_ARRAY[i];\n        var targets = globalSources[target] = {};\n        for (var j = 0; j < eventNames.length; j++) {\n            var eventName = eventNames[j];\n            targets[eventName] = target + ADD_EVENT_LISTENER_SOURCE + eventName;\n        }\n    }\n    var checkIEAndCrossContext = function (nativeDelegate, delegate, target, args) {\n        if (!isDisableIECheck && ieOrEdge) {\n            if (isEnableCrossContextCheck) {\n                try {\n                    var testString = delegate.toString();\n                    if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                        nativeDelegate.apply(target, args);\n                        return false;\n                    }\n                }\n                catch (error) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n            else {\n                var testString = delegate.toString();\n                if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n        }\n        else if (isEnableCrossContextCheck) {\n            try {\n                delegate.toString();\n            }\n            catch (error) {\n                nativeDelegate.apply(target, args);\n                return false;\n            }\n        }\n        return true;\n    };\n    var apiTypes = [];\n    for (var i = 0; i < apis.length; i++) {\n        var type = _global[apis[i]];\n        apiTypes.push(type && type.prototype);\n    }\n    // vh is validateHandler to check event handler\n    // is valid or not(for security check)\n    patchEventTarget(_global, apiTypes, { vh: checkIEAndCrossContext });\n    api.patchEventTarget = patchEventTarget;\n    return true;\n}\nfunction patchEvent(global, api) {\n    patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(target, targetName, method, callbacks) {\n    var symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    var nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                var source = targetName + \".\" + method + \"::\" + callback;\n                var prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    var descriptor = ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = wrapWithCurrentZone(descriptor.value, source);\n                        _redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    attachOriginToPatched(target[method], nativeDelegate);\n}\nfunction registerElementPatch(_global) {\n    if ((!isBrowser && !isMix) || !('registerElement' in _global.document)) {\n        return;\n    }\n    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\n    patchCallbacks(document, 'Document', 'registerElement', callbacks);\n}\nfunction patchCustomElements(_global) {\n    if ((!isBrowser && !isMix) || !('customElements' in _global)) {\n        return;\n    }\n    var callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    patchCallbacks(_global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('util', function (global, Zone, api) {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n});\nZone.__load_patch('timers', function (global) {\n    var set = 'set';\n    var clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', function (global) {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', function (global, Zone) {\n    var blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (var i = 0; i < blockingMethods.length; i++) {\n        var name_1 = blockingMethods[i];\n        patchMethod(global, name_1, function (delegate, symbol, name) {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', function (global, Zone, api) {\n    // load blackListEvents from global\n    var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', function (global, Zone, api) {\n    propertyDescriptorPatch(api, global);\n    propertyPatch();\n});\nZone.__load_patch('customElements', function (global, Zone, api) {\n    registerElementPatch(global);\n    patchCustomElements(global);\n});\nZone.__load_patch('canvas', function (global) {\n    var HTMLCanvasElement = global['HTMLCanvasElement'];\n    if (typeof HTMLCanvasElement !== 'undefined' && HTMLCanvasElement.prototype &&\n        HTMLCanvasElement.prototype.toBlob) {\n        patchMacroTask(HTMLCanvasElement.prototype, 'toBlob', function (self, args) {\n            return { name: 'HTMLCanvasElement.toBlob', target: self, cbIdx: 0, args: args };\n        });\n    }\n});\nZone.__load_patch('XHR', function (global, Zone) {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    var XHR_TASK = zoneSymbol('xhrTask');\n    var XHR_SYNC = zoneSymbol('xhrSync');\n    var XHR_LISTENER = zoneSymbol('xhrListener');\n    var XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    var XHR_URL = zoneSymbol('xhrURL');\n    var XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            var XMLHttpRequestEventTarget_1 = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget_1) {\n                var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget_1.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        var READY_STATE_CHANGE = 'readystatechange';\n        var SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            var data = task.data;\n            var target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            var listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            var newListener = target[XHR_LISTENER] = function () {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        var loadTasks = target['__zone_symbol__loadfalse'];\n                        if (loadTasks && loadTasks.length > 0) {\n                            var oriInvoke_1 = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                var loadTasks = target['__zone_symbol__loadfalse'];\n                                for (var i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke_1.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            var storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            var data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () { return function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        }; });\n        var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        var fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        var fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () { return function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                var options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                var task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        }; });\n        var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () { return function (self, args) {\n            var task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        }; });\n    }\n});\nZone.__load_patch('geolocation', function (global) {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', function (global, Zone) {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            var eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(function (eventTask) {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                var PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    var evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zone.js/dist/zone.js\n// module id = 261\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = singleSpaAngular2;\nvar defaultOpts = {\n  // required opts\n  angularPlatform: null,\n  mainModule: null,\n  template: null,\n  // optional opts\n  Router: null,\n  domElementGetter: null // only optional if you provide a domElementGetter as a custom prop\n};\n\nfunction singleSpaAngular2(userOpts) {\n  if ((typeof userOpts === 'undefined' ? 'undefined' : _typeof(userOpts)) !== 'object') {\n    throw new Error('single-spa-angular2 requires a configuration object');\n  }\n\n  var opts = _extends({}, defaultOpts, userOpts);\n\n  if (!opts.angularPlatform) {\n    throw new Error('single-spa-angular2 must be passed opts.angularPlatform. Usually this should be the return value of platformBrowserDynamic()');\n  }\n\n  if (!opts.mainModule) {\n    throw new Error('single-spa-angular2 must be passed opts.mainModule, which is the Angular module to bootstrap');\n  }\n\n  if (typeof opts.template !== 'string') {\n    throw new Error('single-spa-angular2 must be passed opts.template string');\n  }\n\n  return {\n    bootstrap: bootstrap.bind(null, opts),\n    mount: mount.bind(null, opts),\n    unmount: unmount.bind(null, opts)\n  };\n}\n\nfunction bootstrap(opts) {\n  return Promise.resolve();\n}\n\nfunction mount(opts, props) {\n  return Promise.resolve().then(function () {\n    var domElementGetter = chooseDomElementGetter(opts, props);\n    if (!domElementGetter) {\n      throw new Error('cannot mount angular application \\'' + (props.name || props.appName) + '\\' without a domElementGetter provided either as an opt or a prop');\n    }\n\n    var containerEl = getContainerEl(domElementGetter);\n    containerEl.innerHTML = opts.template;\n  }).then(function () {\n    return opts.angularPlatform.bootstrapModule(opts.mainModule).then(function (module) {\n      return opts.bootstrappedModule = module;\n    });\n  });\n}\n\nfunction unmount(opts, props) {\n  return new Promise(function (resolve, reject) {\n    if (opts.Router) {\n      var routerRef = opts.bootstrappedModule.injector.get(opts.Router);\n      routerRef.dispose();\n    }\n    opts.bootstrappedModule.destroy();\n    delete opts.bootstrappedModule;\n    resolve();\n  });\n}\n\nfunction getContainerEl(domElementGetter) {\n  var element = domElementGetter();\n  if (!element) {\n    throw new Error('domElementGetter did not return a valid dom element');\n  }\n\n  return element;\n}\n\nfunction chooseDomElementGetter(opts, props) {\n  return props && props.customProps && props.customProps.domElementGetter ? props.customProps.domElementGetter : opts.domElementGetter;\n}\n//# sourceMappingURL=single-spa-angular2.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/single-spa-angular2/lib/single-spa-angular2.js\n// module id = 262\n// module chunks = 0","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { HttpClientModule } from'@angular/common/http'\r\nimport AngularApp from './angular.component.ts'\r\nimport { enableProdMode } from '@angular/core'\r\nimport { APP_BASE_HREF, CommonModule } from \"@angular/common\"\r\n\r\nenableProdMode()\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule, HttpClientModule, CommonModule\r\n  ],\r\n  providers: [{ provide: APP_BASE_HREF, useValue: '/angular/' }],\r\n  declarations: [\r\n    AngularApp\r\n  ],\r\n  bootstrap: [AngularApp]\r\n})\r\nexport default class MainModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular/main-module.ts","import { Component, ChangeDetectorRef, Inject } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\n@Component({ \r\n  selector: 'AngularApp',\r\n  templateUrl: '/src/angular/angular.component.html'\r\n})\r\nexport default class AngularApp {\r\n  listData: any[] = [];\r\n  isLoading: boolean = true\r\n\r\n  constructor(@Inject(ChangeDetectorRef) private changeDetector: ChangeDetectorRef, \r\n  @Inject(HttpClient)private http: HttpClient) {\r\n   this.getData();\r\n  }\r\n\r\n  getData() {\r\n    this.http.get('https://reqres.in/api/users?page=1').subscribe(results1 => \r\n      { \r\n        this.http.get('https://reqres.in/api/users?page=2').subscribe(results2 => \r\n        setTimeout(()=> {\r\n          this.listData =  [...results1['data'], ...results2['data']];\r\n          this.isLoading = false;\r\n          }, 1500)\r\n        );\r\n      }\r\n    );  \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular/angular.component.ts"],"sourceRoot":""}